// server.js
import 'dotenv/config';
import express from 'express';
import { Telegraf } from 'telegraf';

const BOT_TOKEN = process.env.BOT_TOKEN;
const PORT = process.env.PORT || 3000;

if (!BOT_TOKEN) {
  throw new Error('BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω –≤ .env!');
}

const bot = new Telegraf(BOT_TOKEN);

bot.start((ctx) => {
  const url = 'https://alrosa-mini-app.ru/';  // –ü–æ–¥—Å—Ç–∞–≤–ª—è–µ–º URL –Ω–∞—à–µ–≥–æ Mini App
  ctx.reply(
    '–ü—Ä–∏–≤–µ—Ç! üëã\n\n' +
    '–•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å, –∫–∞–∫–∞—è –ø—Ä–æ—Ñ–µ—Å—Å–∏—è —Ç–µ–±–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç? üéØ\n' +
    '–ù–∞—à –Ω–µ–±–æ–ª—å—à–æ–π —Ç–µ—Å—Ç –ø–æ –ø—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏ –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —Å–µ–±–µ –∏ –≤—ã–±—Ä–∞—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–∏–Ω–µ—Å—ë—Ç –∫–∞–π—Ñ –∏ —É—Å–ø–µ—Ö. üöÄ\n\n' +
    '–í—Å–µ–≥–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç ‚Äî –∏ —Ç—ã –Ω–∞ —à–∞–≥ –±–ª–∏–∂–µ –∫ –∏–¥–µ–∞–ª—å–Ω–æ–π –∫–∞—Ä—å–µ—Ä–µ. –ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å?\n' +
    '–ñ–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –ø–æ–µ—Ö–∞–ª–∏! üî•', 
    {
      reply_markup: {
        inline_keyboard: [[
          { text: '–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç', web_app: { url } }
        ]]
      }
    }
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª—é–±—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', (ctx) => {
  ctx.reply('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.');
});

// –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
bot.launch().then(() => console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!'));

const app = express();
app.use(express.static('dist'));  // –†–∞–∑–¥–∞—ë–º frontend —á–µ—Ä–µ–∑ Express

app.listen(PORT, () => {
  console.log(`Express-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});